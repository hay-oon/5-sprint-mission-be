generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["prismaSchemaFolder"] // 스키마를 분리할 수 있게 해줌
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                String   @id @default(uuid())
    nickname          String
    email             String
    encryptedPassword String
    image             String?
    createdAt         DateTime @default(now())
    updatedAt         DateTime @updatedAt
}

model Product {
    id            String     @id @default(uuid())
    userId        String
    name          String
    description   String
    price         Int
    tags          String[]
    images        String[]
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    Comment       Comment[]
    favoriteCount Int        @default(0)
    Favorite      Favorite[]
}

model Article {
    id            String     @id @default(uuid())
    userId        String
    title         String
    content       String
    createdAt     DateTime   @default(now())
    updatedAt     DateTime   @updatedAt
    Comment       Comment[]
    favoriteCount Int        @default(0)
    Favorite      Favorite[]
}

model Comment {
    id        String   @id @default(uuid())
    content   String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    articleId String?
    article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
    productId String?
    product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Favorite {
    id        String   @id @default(uuid())
    userId    String // 좋아요를 누른 사용자 ID
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
    productId String?
    article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
    articleId String?

    // 복합 유니크 제약조건 (한 사용자가 동일 항목에 중복 좋아요 방지)
    @@unique([userId, productId])
    @@unique([userId, articleId])
}
